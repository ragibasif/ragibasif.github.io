---
type Props = {
  href: string;
  class?: string;
  external?: boolean;
};

const { href, class: className, external = false, ...rest } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
---

<a
  href={href}
  target={external ? "_blank" : "_self"}
  rel={external ? "noopener noreferrer" : ""}
  class:list={[className, { active: isActive }, "blur"]}
  {...rest}
>
  <slot />
</a>

<style>
  .blur {
    text-decoration: none;
    transition: all ease-in-out 300ms;
  }

  .blur:hover {
    filter: blur(0.1rem);
    transition: ease-in-out 300ms;
  }
</style>
