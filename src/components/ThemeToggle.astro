---
// ThemeToggle.astro - A reusable theme toggle component
---

<button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
  <span class="theme-toggle-thumb"></span>
</button>

<script>
  // Theme toggle functionality
  (function () {
    const themeToggle = document.getElementById("theme-toggle");
    if (!themeToggle) return;

    const html = document.documentElement;

    // Get saved theme or default to light
    const savedTheme = localStorage.getItem("theme") || "light";

    // Apply saved theme
    html.setAttribute("data-theme", savedTheme);

    // Theme toggle click handler
    themeToggle.addEventListener("click", function () {
      const currentTheme = html.getAttribute("data-theme");
      const newTheme = currentTheme === "dark" ? "light" : "dark";

      html.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
    });

    // Listen for system theme changes
    const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");

    function handleSystemThemeChange(e: MediaQueryListEvent) {
      // Only auto-switch if user hasn't manually set a preference
      if (!localStorage.getItem("theme")) {
        const systemTheme = e.matches ? "dark" : "light";
        html.setAttribute("data-theme", systemTheme);
      }
    }

    mediaQuery.addEventListener("change", handleSystemThemeChange);

    // Set initial theme based on system preference if no saved preference
    if (!localStorage.getItem("theme")) {
      const systemTheme = mediaQuery.matches ? "dark" : "light";
      html.setAttribute("data-theme", systemTheme);
    }
  })();
</script>
